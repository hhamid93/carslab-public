#for this to take affect, the ManagedCluster must have "kepler: "true"" as a label
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-kepler
  namespace: ztp-common-cars2
  annotations:
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
    ran.openshift.io/ztp-deploy-wave: "2"
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-ns
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: Namespace # must have kepler
                metadata:
                  name: kepler
                  annotations:
                    openshift.io/description: Kepler exporter
                    openshift.io/display-name: ""
                  labels:
                    openshift.io/cluster-monitoring: "true"
                    sustainable-computing.io/app: kepler
                    name: kepler
                spec: {}
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-sa
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: ServiceAccount
                metadata:
                  name: sa-kepler
                  namespace: kepler
                  labels:
                    sustainable-computing.io/app: kepler
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-role
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: Role
                metadata:
                  labels:
                    app.kubernetes.io/component: prometheus
                    app.kubernetes.io/instance: k8s
                    app.kubernetes.io/name: prometheus
                    sustainable-computing.io/app: kepler
                  name: prometheus-k8s
                  namespace: kepler
                rules:
                - apiGroups:
                  - ""
                  resources:
                  - services
                  - endpoints
                  - pods
                  verbs:
                  - get
                  - list
                  - watch
                - apiGroups:
                  - extensions
                  resources:
                  - ingresses
                  verbs:
                  - get
                  - list
                  - watch
                - apiGroups:
                  - networking.k8s.io
                  resources:
                  - ingresses
                  verbs:
                  - get
                  - list
                  - watch
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-clusterrole
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: ClusterRole
                metadata:
                  labels:
                    sustainable-computing.io/app: kepler
                  name: kepler-clusterrole
                rules:
                - apiGroups:
                  - ""
                  resources:
                  - nodes/metrics
                  - nodes/proxy
                  - nodes/stats
                  verbs:
                  - get
                  - watch
                  - list
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-rolebinding
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: RoleBinding
                metadata:
                  labels:
                    app.kubernetes.io/component: prometheus
                    app.kubernetes.io/instance: k8s
                    app.kubernetes.io/name: prometheus
                    sustainable-computing.io/app: kepler
                  name: prometheus-k8s
                  namespace: kepler
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: Role
                  name: prometheus-k8s
                subjects:
                - kind: ServiceAccount
                  name: prometheus-k8s
                  namespace: openshift-monitoring
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-rolebinding-priv
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: RoleBinding
                metadata:
                  name: system:openshift:scc:privileged
                  namespace: kepler
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: ClusterRole
                  name: system:openshift:scc:privileged
                subjects:
                - kind: ServiceAccount
                  name: sa-kepler
                  namespace: kepler
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-clusterrolebinding
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: ClusterRoleBinding
                metadata:
                  labels:
                    sustainable-computing.io/app: kepler
                  name: kepler-clusterrole-binding
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: ClusterRole
                  name: kepler-clusterrole
                subjects:
                - kind: ServiceAccount
                  name: sa-kepler
                  namespace: kepler
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-cfm
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: kepler-cfm
                  namespace: kepler
                  labels:
                    sustainable-computing.io/app: kepler
                data:
                  BIND_ADDRESS: 0.0.0.0:9104
                  CGROUP_METRICS: '*'
                  CPU_ARCH_OVERRIDE: ""
                  ENABLE_EBPF_CGROUPID: "true"
                  ENABLE_GPU: "true"
                  ENABLE_PROCESS_METRICS: "false"
                  EXPOSE_IRQ_COUNTER_METRICS: "true"
                  EXPOSE_KUBELET_METRICS: "true"
                  KEPLER_LOG_LEVEL: "1"
                  KEPLER_NAMESPACE: kepler
                  METRIC_PATH: /metrics
                  MODEL_CONFIG: |
                    CONTAINER_COMPONENTS_ESTIMATOR=false
                    CONTAINER_COMPONENTS_INIT_URL=https://raw.githubusercontent.com/sustainable-computing-io/kepler-model-server/main/tests/test_models/DynComponentModelWeight/CgroupOnly/ScikitMixed/ScikitMixed.json
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-service
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: Service
                metadata:
                  labels:
                    app.kubernetes.io/component: exporter
                    app.kubernetes.io/name: kepler-exporter
                    sustainable-computing.io/app: kepler
                  name: kepler-exporter
                  namespace: kepler
                spec:
                  clusterIP: None
                  ports:
                  - name: http
                    port: 9104
                    targetPort: http
                  selector:
                    app.kubernetes.io/component: exporter
                    app.kubernetes.io/name: kepler-exporter
                    sustainable-computing.io/app: kepler
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-daemonset
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: apps/v1
                kind: DaemonSet
                metadata:
                  labels:
                    sustainable-computing.io/app: kepler
                  name: kepler-exporter
                  namespace: kepler
                spec:
                  selector:
                    matchLabels:
                      app.kubernetes.io/component: exporter
                      app.kubernetes.io/name: kepler-exporter
                      sustainable-computing.io/app: kepler
                  template:
                    metadata:
                      labels:
                        app.kubernetes.io/component: exporter
                        app.kubernetes.io/name: kepler-exporter
                        sustainable-computing.io/app: kepler
                    spec:
                      affinity:
                        nodeAffinity:
                          requiredDuringSchedulingIgnoredDuringExecution:
                            nodeSelectorTerms:
                            - matchExpressions:
                              - key: feature.node.kubernetes.io/cpu-cpuid.HYPERVISOR
                                operator: DoesNotExist
                      containers:
                      - args:
                        - /usr/bin/kepler -v=1
                        command:
                        - /bin/sh
                        - -c
                        env:
                        - name: NODE_IP
                          valueFrom:
                            fieldRef:
                              fieldPath: status.hostIP
                        image: quay.io/sustainable_computing_io/kepler:pr-626
                        imagePullPolicy: Always
                        livenessProbe:
                          failureThreshold: 5
                          httpGet:
                            path: /healthz
                            port: 9104
                            scheme: HTTP
                          initialDelaySeconds: 10
                          periodSeconds: 60
                          successThreshold: 1
                          timeoutSeconds: 10
                        name: kepler-exporter
                        ports:
                        - containerPort: 9104
                          name: http
                        resources:
                          requests:
                            cpu: 100m
                            memory: 400Mi
                        securityContext:
                          privileged: true
                        volumeMounts:
                        - mountPath: /usr/src/kernels
                          name: kernel-src
                        - mountPath: /sys/kernel/debug
                          name: kernel-debug
                        - mountPath: /lib/modules
                          name: lib-modules
                        - mountPath: /sys
                          name: tracing
                        - mountPath: /proc
                          name: proc
                        - mountPath: /etc/kepler/kepler.config
                          name: cfm
                          readOnly: true
                      dnsPolicy: ClusterFirstWithHostNet
                      serviceAccountName: sa-kepler
                      tolerations:
                      - effect: NoSchedule
                        key: node-role.kubernetes.io/master
                      volumes:
                      - hostPath:
                          path: /sys/kernel/debug
                          type: Directory
                        name: kernel-debug
                      - hostPath:
                          path: /usr/src/kernels
                          type: Directory
                        name: kernel-src
                      - hostPath:
                          path: /lib/modules
                          type: Directory
                        name: lib-modules
                      - hostPath:
                          path: /sys
                          type: Directory
                        name: tracing
                      - hostPath:
                          path: /proc
                          type: Directory
                        name: proc
                      - configMap:
                          name: kepler-cfm
                        name: cfm
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-servicemon
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: monitoring.coreos.com/v1
                kind: ServiceMonitor
                metadata:
                  labels:
                    app.kubernetes.io/component: exporter
                    app.kubernetes.io/name: kepler-exporter
                    sustainable-computing.io/app: kepler
                  name: kepler-exporter
                  namespace: openshift-monitoring
                spec:
                  endpoints:
                  - interval: 3s
                    port: http
                    relabelings:
                    - action: replace
                      regex: (.*)
                      replacement: $1
                      sourceLabels:
                      - __meta_kubernetes_pod_node_name
                      targetLabel: instance
                    scheme: http
                  jobLabel: app.kubernetes.io/name
                  namespaceSelector:
                    matchNames:
                    - kepler
                  selector:
                    matchLabels:
                      app.kubernetes.io/component: exporter
                      app.kubernetes.io/name: kepler-exporter
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-kepler
  namespace: ztp-common-cars2
placementRef:
  name: placement-policy-kepler
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-kepler
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-kepler
  namespace: ztp-common-cars2
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - {key: kepler, operator: In, values: ["true"]}
